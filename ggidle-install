#!/usr/bin/sh

# author GG weebcyberpunk@gmail.com
# version 0.0.0
# since Mar 25, 2022

# installs my enviroment
# ...
# nothing more to say about it
#
# needs to be run as root inside the cloned repo
#
# dependencies: git, dialog and the base-devel metapack
# also, the enviroment itself will need you to have installed xorg and sudo
# before running the script

#
# Copyright 2022 © GG
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of 
# this software and associated documentation files (the “Software”), to deal 
# in the Software without restriction, including without limitation the rights to 
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
# of the Software, and to permit persons to whom the Software is furnished to do 
# so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all 
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
# SOFTWARE.
# 

# LIB {{{
# prints error msg and exits
function error {
	echo "$1"
	exit 1
}

# }}}

# CONFIGURE {{{

# username
function getusername {
	USERNAME=$(
		dialog --no-cancel \
		--title "Welcome to the GG's IDLE installation!" \
		--inputbox "Please enter the username to the user which will use GG's IDLE. If the user don't exists, the script will create it.\n
If it exists, some config files will be overwritten." \
		0 0 \
		3>&1 1>&2 2>&3 3>&1
	)
	if [ "$USERNAME" == "1" ]
	then
		error "User exited"
	fi

	while ! echo $USERNAME | grep -q "^[a-z_][a-z0-9_-]*$"; do
		USERNAME=$(
		dialog --no-cancel \
		--inputbox "Invalid username. Remember that usernames needs to be only lowercase letters, _ and - and start with a letter" \
		0 0 \
		3>&1 1>&2 2>&3 3>&1
		)
		if [ "$USERNAME" == "1" ]
		then
			error "User exited"
		fi
	done
}

# wallpapers path
function wallpapersconfig {
	WALLPAPERS_PATH=$(
		dialog --no-cancel \
		--menu "Choose directory to install the IDLE wallpapers: " \
		0 0 0 \
		"/usr/share/backgrounds/Wallpapers" "Recommended, accessible system-wide" \
		"~/Pictures/Wallpapers" "Accessible only by the $USERNAME user" \
		3>&1 1>&2 2>&3 3>&1
	)

	if [ "$WALLPAPERS_PATH" == "" ]
	then
		error "User exited"
	fi
}

# additional configs/installs: (Neo)Vim, Zathura, tmux, cava, mutt, htop
function add_config {
	ADD_CONFIG=$(
		dialog --no-cancel \
		--checklist "Select additional configs to install: " \
		0 0 0 \
		"NyanVim" "GG's configs to make Neovim become a terminal-based IDE" "nvim" \
		"Zathura" "IDLE configs to the Zathura PDF reader" "zathura" \
		"tmux" "IDLE configs for the tmux multiplexer" "tmux" \
		"cava" "IDLE configs for the cava audio visualizer" "cava" \
		"Neomutt" "IDLE sample for the Neomutt email client" "mutt" \
		"htop" "IDLE configs for the htop task manager" "htop" \
		3>&1 1>&2 2>&3 3>&1
	)
}

# terminal build
function whichterm {
	WHICH_TERM=$(
		dialog --no-cancel \
		--menu "Choose the ST terminal build you want to use: " \
		0 0 0 \
		"Default" "Default plain background" \
		"Background image" "ST with an image (in farbfeld format) as background" \
		"Transparent" "ST with transparent background" \
		3>&1 1>&2 2>&3 3>&1
	)
}

# }}}

# MAKE {{{

# perform full sys upgrade
function sysupgrade {
	echo 'Performing full system upgrade...'
	pacman -Syu --noconfirm || error "Cannot upgrade system. Are you sure you are running this from an Arch-based GNU/Linux distribution, is root and have internet connection?"
}

function createuser {
	PASS=$(
		dialog --no-cancel \
		--passwordbox \
		"Detected that $USERNAME does not exists. To create it, please enter the new user password: " \
		0 0 \
		3>&1 1>&2 2>&3 3>&1
	)
	PASS_AGAIN=$(
		dialog --no-cancel \
		--passwordbox \
		"Retype password for confirmation: " \
		0 0 \
		3>&1 1>&2 2>&3 3>&1
	)
	if [ "$IS_TEST" != "true" ]
	then
		useradd -m -G games,floppy,scanner,storage,optical,kvm,input,disk,wheel $USERNAME
	fi

	while [ "$PASS" != "$PASS_AGAIN" ]
	do
		unset PASS_AGAIN
		PASS=$(
			dialog --passwordbox --no-cancel \
			"Passwords don't match. Please enter again: " \
			0 0 \
			3>&1 1>&2 2>&3 3>&1
		)
		PASS_AGAIN=$(
			dialog --passwordbox --no-cancel \
			"Retype: " \
			0 0 \
			3>&1 1>&2 2>&3 3>&1
		)
	done

	if [ "$IS_TEST" != "true" ]
	then
		echo "$USERNAME:$PASS" | chpasswd
	fi

	unset PASS
	unset PASS_AGAIN
}

# check if user exists. if y, do nothing. if n, creates it
function checkuser {
	id -u $USERNAME > /dev/null || createuser
}

# }}}

# INSTALL {{{
# install the yay aur helper
function yay_install {
	dialog --infobox "Installing the Yay AUR helper..." 0 0 3>&1 1>&2 2>&3 3>&1
	if [ "$IS_TEST" == "false" ]
	then
		git clone https://aur.archlinux.org/yay-bin.git
		cd yay-bin
		makepkg
		pacman -U yay*.pkg.tar.zst
		cd ..
		rm -rf yay-bin
	else
		sleep 5s
	fi
}

function programs_install {
	dialog --infobox "Installing programs from repo's progs file..." 0 0 3>&1 1>&2 2>&3 3>&1
	pacman -S --needed $(cat repo-progs) > /tmp/ggidle-pac-log || error "error installing programs with pacman, see logs at /tmp/ggidle-pac-log"

	if [ "$IS_TEST" == "true" ]
	then
		sleep 5s
	fi

	dialog --infobox "Installing programs from aur's progs file..." 0 0 3>&1 1>&2 2>&3 3>&1
	yay -S --needed $(cat aur-progs) > /tmp/ggidle-yay-log || error "error installing programs with yay, see logs at /tmp/ggidle-yay-log"

	if [ "$IS_TEST" == "true" ]
	then
		sleep 5s
	fi
}
# }}}

IS_TEST="true"

# --test is only meant to be runned on developing, but I will commit that anyway
# the flag will make all sudo and install features to be skipped
if [ "$1" != "--test" ] 
then 
	IS_TEST="false"
	sysupgrade
fi

# checks if dependencies are installed
git     --version || error "Cannot run git! Please install all dependencies before running the install script!"
dialog  --version || error "Cannot run dialog! Please install all dependencies before running the install script!"
makepkg --version || error "Cannot run makepkg! Please install all dependencies before running the install script!"

getusername
wallpapersconfig
add_config
whichterm
checkuser
yay_install
programs_install
